{"version":3,"sources":["components/folderCreateModal.js","components/folders.js","components/noteCreateModal.js","components/notesDeleteModal.js","components/notesUpdateModal.js","components/notes.js","components/noteText.js","App.js","reportWebVitals.js","index.js"],"names":["CreateFolderModal","props","useState","name","setName","a","body","axios","post","setUpdated","alert","console","log","Modal","show","onHide","handleShow","Header","closeButton","Title","Body","onSubmit","e","preventDefault","createFolder","className","required","type","value","onChange","target","placeholder","Folders","folders","setFolders","isLoading","setLoading","isError","setError","isUpdated","setShow","handleDelete","_id","delete","data","useEffect","fetch","result","json","role","map","folder","key","onClick","setFolderID","style","color","icon","faTrashAlt","faPlusSquare","NoteCreateModal","text","setText","password","setPassword","setProperty","propertySetter","postNote","NoteDeleteModal","deleteNote","NotesUpdateModal","put","message","updateShow","Notes","folderNotes","setFolderNotes","error","deleteShow","setDeleteShow","handleDeleteShow","setUpdateShow","handleUpdateShow","folderID","get","note","date","Intl","DateTimeFormat","year","month","day","format","Date","parse","createdAt","prompt","setNoteID","faEdit","NoteText","setNote","errMess","setErrMess","noteID","response","fetchNote","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebb1f715.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreateFolderModal(props) {\r\n  let [name, setName] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.handleShow();\r\n    createFolder();\r\n  }\r\n\r\n  async function createFolder() {\r\n    try {\r\n      const body = { name: name };\r\n      let result = await axios.post(\r\n        \"https://demo-notes-website.herokuapp.com/folders/createFolder\",\r\n        body\r\n      );\r\n      props.setUpdated(true);\r\n    } catch (error) {\r\n      alert(\"An error occured! Please try again\");\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleShow}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add a new folder</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-5\">Name</label>\r\n            <input\r\n              required\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              placeholder=\"Type the name of folder\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateFolderModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport { faPlusSquare, faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CreateFolderModal from \"./folderCreateModal\";\r\nimport axios from \"axios\";\r\n\r\nfunction Folders(props) {\r\n  let [folders, setFolders] = useState([]);\r\n  let [isLoading, setLoading] = useState(true);\r\n  let [isError, setError] = useState(false);\r\n  let [isUpdated, setUpdated] = useState(false);\r\n\r\n  let [show, setShow] = useState(false);\r\n  const handleShow = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const handleDelete = async (_id) => {\r\n    try {\r\n      let result = await axios.delete(\r\n        \"https://demo-notes-website.herokuapp.com/folders/deleteFolder\",\r\n        {\r\n          data: {\r\n            _id,\r\n          },\r\n        }\r\n      );\r\n      setUpdated(true);\r\n    } catch (error) {\r\n      alert(\"An error occured! Please try again\");\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      let result = await fetch(\r\n        \"https://demo-notes-website.herokuapp.com/folders/getFolders\"\r\n      );\r\n      let data = await result.json();\r\n      setLoading(false);\r\n      setFolders(data);\r\n      setUpdated(false);\r\n    } catch (error) {\r\n      alert(\"Some error occured! Please try to reload!\");\r\n      console.log(\"error: \", error);\r\n      setLoading(false);\r\n      setUpdated(false);\r\n      setError(true);\r\n    }\r\n  }, [isUpdated]);\r\n\r\n  if (isError)\r\n    return (\r\n      <div className=\"alert alert-danger\">\r\n        Some error occured! Try reloading the page or check your internet\r\n        connection!\r\n      </div>\r\n    );\r\n  if (isLoading)\r\n    return (\r\n      <div className=\"spinner-border text-secondary\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  if (!folders[0])\r\n    return (\r\n      <div>\r\n        No folder present!\r\n        <div className=\"add-folder\">\r\n          <FontAwesomeIcon\r\n            className=\"hover-item mb-0\"\r\n            style={{ color: \"rgb(204, 201, 201)\" }}\r\n            icon={faPlusSquare}\r\n            onClick={handleShow}\r\n          />{\" \"}\r\n          New Folder\r\n        </div>\r\n        <CreateFolderModal\r\n          setUpdated={setUpdated}\r\n          show={show}\r\n          handleShow={handleShow}\r\n        />\r\n      </div>\r\n    );\r\n  return (\r\n    <div>\r\n      {folders.map((folder, key) => {\r\n        return (\r\n          <div key={key} className=\"row\">\r\n            <p\r\n              className=\"col-8 link\"\r\n              onClick={() => {\r\n                props.setFolderID(folder._id);\r\n              }}\r\n            >\r\n              {folder.name}\r\n            </p>\r\n            <div className=\"col-4\">\r\n              <FontAwesomeIcon\r\n                className=\"hover-item\"\r\n                style={{ color: \"rgb(204, 201, 201)\" }}\r\n                icon={faTrashAlt}\r\n                onClick={() => {\r\n                  handleDelete(folder._id);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      <div className=\"add-folder\">\r\n        <FontAwesomeIcon\r\n          className=\"hover-item mb-0\"\r\n          style={{ color: \"rgb(204, 201, 201)\" }}\r\n          icon={faPlusSquare}\r\n          onClick={handleShow}\r\n        />{\" \"}\r\n        New Folder\r\n      </div>\r\n      <CreateFolderModal\r\n        setUpdated={setUpdated}\r\n        show={show}\r\n        handleShow={handleShow}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Folders;\r\n","import { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction NoteCreateModal(props) {\r\n  let [name, setName] = useState(\"\");\r\n  let [text, setText] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n\r\n  function setProperty(e, propertySetter) {\r\n    propertySetter(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    postNote();\r\n    props.handleShow();\r\n  }\r\n\r\n  async function postNote() {\r\n    let data = {\r\n      folder: props.folder,\r\n      name: name,\r\n      text: text,\r\n      password,\r\n    };\r\n    try {\r\n      let result = await axios.post(\r\n        \"https://demo-notes-website.herokuapp.com/notes/createNotes\",\r\n        data\r\n      );\r\n      console.log(result);\r\n      props.setUpdated(true);\r\n    } catch (error) {\r\n      alert(\"An error occured! Please try again\");\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleShow}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add a note</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-5\">Name</label>\r\n            <input\r\n              required\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setProperty(e, setName);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-5\">Text</label>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={text}\r\n              onChange={(e) => {\r\n                setProperty(e, setText);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-5\">Password</label>\r\n            <input\r\n              required\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setProperty(e, setPassword);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default NoteCreateModal;\r\n","import { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction NoteDeleteModal(props) {\r\n  let [password, setPassword] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.handleShow();\r\n    deleteNote();\r\n  }\r\n\r\n  async function deleteNote() {\r\n    try {\r\n      await axios.delete(\r\n        \"https://demo-notes-website.herokuapp.com/notes/deleteNotes\",\r\n        {\r\n          data: { password, _id: props._id },\r\n        }\r\n      );\r\n      props.setUpdated(true);\r\n    } catch (error) {\r\n      alert(\"An error occured! Please try again\");\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleShow}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Delete the note</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-5\">Enter Password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default NoteDeleteModal;\r\n","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction NotesUpdateModal(props) {\r\n  let [name, setName] = useState(\"\");\r\n  let [text, setText] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n\r\n  function setProperty(e, propertySetter) {\r\n    propertySetter(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    updateShow();\r\n    setName(\"\");\r\n    setText(\"\");\r\n    setPassword(\"\");\r\n    props.handleShow();\r\n  }\r\n\r\n  async function updateShow() {\r\n    let data = {\r\n      _id: props._id,\r\n      name,\r\n      text,\r\n      password,\r\n      folder: props.folder,\r\n    };\r\n    try {\r\n      await axios.put(\r\n        \"https://demo-notes-website.herokuapp.com/notes/updateNotes\",\r\n        data\r\n      );\r\n      props.setUpdated(true);\r\n    } catch (error) {\r\n      if (error.message === \"Request failed with status code 401\")\r\n        return alert(\"Incorrect Password\");\r\n      alert(\"Some error occured! Please check your password and try again!\");\r\n      console.log(\"error: \", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleShow}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Update a note</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-5\">Name</label>\r\n            <input\r\n              required\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setProperty(e, setName);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-5\">Text</label>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={text}\r\n              onChange={(e) => {\r\n                setProperty(e, setText);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"mr-5\">Password</label>\r\n            <input\r\n              required\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => {\r\n                setProperty(e, setPassword);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input type=\"submit\" className=\"btn btn-primary\" />\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default NotesUpdateModal;\r\n","import axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEdit,\r\n  faPlusSquare,\r\n  faTrashAlt,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NoteCreateModal from \"./noteCreateModal\";\r\nimport NoteDeleteModal from \"./notesDeleteModal\";\r\nimport NotesUpdateModal from \"./notesUpdateModal\";\r\n\r\nfunction Notes(props) {\r\n  let [folderNotes, setFolderNotes] = useState([]);\r\n  let [isUpdated, setUpdated] = useState(false);\r\n  let [isLoading, setLoading] = useState(false);\r\n  let [error, setError] = useState(false);\r\n\r\n  let [show, setShow] = useState(false);\r\n  const handleShow = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  let [deleteShow, setDeleteShow] = useState(false);\r\n  const handleDeleteShow = () => {\r\n    setDeleteShow(!deleteShow);\r\n  };\r\n\r\n  let [updateShow, setUpdateShow] = useState(false);\r\n  const handleUpdateShow = () => {\r\n    setUpdateShow(!updateShow);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (props.folderID) {\r\n      setLoading(true);\r\n      try {\r\n        let data = await axios.get(\r\n          `https://demo-notes-website.herokuapp.com/notes/${props.folderID}/notesList`\r\n        );\r\n        setLoading(false);\r\n        setError(false);\r\n        setFolderNotes(data.data);\r\n        setUpdated(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(true);\r\n        setLoading(false);\r\n        alert(\"An error occured! Try refreshing the page!\");\r\n      }\r\n    }\r\n  }, [props.folderID, isUpdated]);\r\n\r\n  if (!props.folderID) return <div>No Folder selected yet</div>;\r\n  if (isLoading)\r\n    return (\r\n      <div className=\"spinner-border text-secondary\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  if (error) return <div>There is an error</div>;\r\n\r\n  return (\r\n    <div>\r\n      {folderNotes === null ? (\r\n        <div>No note in this folder</div>\r\n      ) : (\r\n        folderNotes.map((note, key) => {\r\n          let date = new Intl.DateTimeFormat(\"en-US\", {\r\n            year: \"numeric\",\r\n            month: \"short\",\r\n            day: \"2-digit\",\r\n          }).format(new Date(Date.parse(note.createdAt)));\r\n\r\n          return (\r\n            <div key={key}>\r\n              <div className=\"row m-1\">\r\n                <div\r\n                  className=\"col-12 link\"\r\n                  onClick={() => {\r\n                    let password = prompt(\"Type the password for this note\");\r\n                    props.setNoteID(note._id);\r\n                    props.setPassword(password);\r\n                  }}\r\n                >\r\n                  {note.name}\r\n                </div>\r\n                <div className=\"col-6\">{date}</div>\r\n                <div className=\"col-6\">\r\n                  <FontAwesomeIcon\r\n                    className=\"hover-item\"\r\n                    style={{ color: \"rgb(204, 201, 201)\" }}\r\n                    icon={faTrashAlt}\r\n                    onClick={handleDeleteShow}\r\n                  />\r\n                  <NoteDeleteModal\r\n                    show={deleteShow}\r\n                    handleShow={handleDeleteShow}\r\n                    setUpdated={setUpdated}\r\n                    _id={note._id}\r\n                  />\r\n                  <FontAwesomeIcon\r\n                    className=\"hover-item ml-2\"\r\n                    style={{ color: \"rgb(204, 201, 201)\" }}\r\n                    icon={faEdit}\r\n                    onClick={handleUpdateShow}\r\n                  />\r\n                  <NotesUpdateModal\r\n                    show={updateShow}\r\n                    handleShow={handleUpdateShow}\r\n                    setUpdated={setUpdated}\r\n                    _id={note._id}\r\n                    folder={props.folderID}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n      <div className=\"add-note\">\r\n        <FontAwesomeIcon\r\n          className=\"hover-item\"\r\n          style={{ color: \"rgb(204, 201, 201)\" }}\r\n          icon={faPlusSquare}\r\n          onClick={handleShow}\r\n        />{\" \"}\r\n        Add a note\r\n      </div>\r\n      <NoteCreateModal\r\n        show={show}\r\n        setUpdated={setUpdated}\r\n        handleShow={handleShow}\r\n        folder={props.folderID}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notes;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction NoteText(props) {\r\n  let [note, setNote] = useState([]);\r\n  let [isLoading, setLoading] = useState(false);\r\n  let [error, setError] = useState(false);\r\n  let [errMess, setErrMess] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (props.noteID || props.password) {\r\n      fetchNote();\r\n    }\r\n  }, [props.noteID, props.password]);\r\n\r\n  async function fetchNote() {\r\n    let data = {\r\n      _id: props.noteID,\r\n      password: props.password,\r\n    };\r\n    try {\r\n      setLoading(true);\r\n      let response = await axios.post(\r\n        \"https://demo-notes-website.herokuapp.com/notes/getNote\",\r\n        data\r\n      );\r\n      setNote(response.data);\r\n      setLoading(false);\r\n      setError(false);\r\n    } catch (error) {\r\n      if (error.message === \"Request failed with status code 401\") {\r\n        alert(\"Incorrect Password\");\r\n        setError(true);\r\n        setLoading(false);\r\n        setErrMess(\"Your Password is incorrect\");\r\n      } else {\r\n        setError(true);\r\n        setLoading(false);\r\n        setErrMess(\"Some error occured! Please try again!\");\r\n        alert(\"Some error occured! Please check your password and try again!\");\r\n        console.log(\"error: \", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!props.noteID || !props.password) return <div>No Note Selected!</div>;\r\n  if (isLoading || !note[0])\r\n    return (\r\n      <div className=\"spinner-border text-secondary\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  if (error) return <div>{errMess}</div>;\r\n  return <div>{note[0].text}</div>;\r\n}\r\n\r\nexport default NoteText;\r\n","import { useState } from \"react\";\nimport Folders from \"./components/folders\";\nimport Notes from \"./components/notes\";\nimport NoteText from \"./components/noteText\";\n\nfunction App() {\n  let [folderID, setFolderID] = useState(\"\");\n  let [noteID, setNoteID] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-3 folder-column\">\n            <Folders setFolderID={setFolderID} />\n          </div>\n          <div className=\"col-4 notes-column\">\n            <Notes\n              folderID={folderID}\n              setNoteID={setNoteID}\n              setPassword={setPassword}\n            />\n          </div>\n          <div className=\"col text-column\">\n            <NoteText password={password} noteID={noteID} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}